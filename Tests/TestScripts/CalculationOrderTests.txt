' Test that we are recalculating formulas in the proper order
' Test simple cases
CreateFormulaExecutor†b2;a1+1•GetCalculationListExecutor†A1•CalculationOrderValidator†0
CreateFormulaExecutor†b1;a1+1;c2;a1+b1•GetCalculationListExecutor†A1•CalculationOrderValidator†0;1
CreateFormulaExecutor†c2;a1+b1;b1;a1+1•GetCalculationListExecutor†A1•CalculationOrderValidator†1;0
CreateFormulaExecutor†a3;a1+1;b2;a3+a1;c3;a1+4;d4;c3+2•GetCalculationListExecutor†A1•CalculationOrderValidator†0;2;1;3
' Complicated case with single cell references
CreateFormulaExecutor†b2;a1+b1;c2;a1+c1;a3;b2+3;b3;b2+c2;c3;b2+c1•GetCalculationListExecutor†A1:C3•CalculationOrderValidator†0;1;2;4;3
' Reverse order
CreateFormulaExecutor†c3;b2+c1;a3;b2+3;b3;b2+c2;c2;a1+c1;b2;a1+b1•GetCalculationListExecutor†A1:C3•CalculationOrderValidator†2;3;4;0;1
' Test cases involving cell ranges
CreateFormulaExecutor†d1;sum(b3:d4);b4;a6+1;d5;b4+2•GetCalculationListExecutor†A6•CalculationOrderValidator†2;0;1
CreateFormulaExecutor†d1;sum(b3:d4)+d5;b4;a6+1;d5;b4+2•GetCalculationListExecutor†A6•CalculationOrderValidator†2;0;1
' Cell ranges with overlap
CreateFormulaExecutor†f1;c2:e5;c4;b4+1;a1;b3:c4;b4;a6+1•GetCalculationListExecutor†A6•CalculationOrderValidator†2;1;3;0
CreateFormulaExecutor†f1;c2:e5;c4;b4+1;a1;b3:c4+f1;b4;a6+1•GetCalculationListExecutor†A6•CalculationOrderValidator†2;1;3;0
' Create a formula, then make one of its references invalid.  The calculation list should be empty
CreateFormulaExecutor†a1;b2+1•MoveRangeExecutor†c3;-1;-1•GetCalculationListExecutor†b2•EmptyCalculationOrderValidator†
' Test with multiple sheets
'		A change in a reference from another sheet should make formula recalculate
CreateFormulaExecutor†a1;Sheet2!b2+1•GetCalculationListExecutor†Sheet2!b2•CalculationOrderValidator†0
'		A change in a reference from a different sheet should not cause a recalculate
CreateFormulaExecutor†a1;Sheet2!b2+1•GetCalculationListExecutor†Sheet1!b2•EmptyCalculationOrderValidator†
' Test volatile functions
' A volatile function should always be included in the calculation list
CreateFormulaExecutor†b2;rand()+1•GetCalculationListExecutor†A1•CalculationOrderValidator†0
CreateFormulaExecutor†b2;rand()+1;c3;b2+1•GetCalculationListExecutor†A1•CalculationOrderValidator†0;1
CreateFormulaExecutor†b2;rand()+1;c3;b2+1•GetCalculationListExecutor†b2•CalculationOrderValidator†0;1
CreateFormulaExecutor†b2;rand()+1;c3;b2+rand()•GetCalculationListExecutor†A1•CalculationOrderValidator†0;1
CreateFormulaExecutor†b2;rand()+1;c3;b2+rand()•GetCalculationListExecutor†b2•CalculationOrderValidator†0;1
CreateFormulaExecutor†b2;rand()+1;c3;b2+a1•GetCalculationListExecutor†a1•CalculationOrderValidator†0;1
' Make sure that named references also have right calc order
CreateNamedFormulaExecutor†test;cos(45)•CreateFormulaExecutor†a1;test+1•GetNamedCalculationListExecutor†test•CalculationOrderValidator†0